{"version":3,"sources":["images/BankLogo.png","components/Header.jsx","components/Footer.jsx","Routes.js","index.js","constants.js","services/Requests.js","services/UserContext.jsx","services/Utilities.js"],"names":["withRouter","location","useContext","UserContext","user","userExists","useState","routes","setRoutes","useEffect","sessionStorage","getItem","sessionStorageKeys","token","routeConstants","home","withdraw","deposit","data","logout","login","create_account","Navbar","bg","expand","Container","Brand","to","path","as","Link","Toggle","Collapse","className","Nav","map","route","OverlayTrigger","trigger","placement","overlay","Popover","Header","name","Body","description","isEqual","pathname","disabled","first_name","last_name","email","Footer","NavbarBrand","FourZeroFour","React","lazy","LoadingComponent","src","Logo","alt","height","Routes","RenderSuspenseful","children","Suspense","fallback","basename","Object","values","exact","walled","component","ReactDOM","render","StrictMode","document","getElementById","HomePage","Withdraw","CreateAccount","Deposit","AllData","Login","Logout","endpoints","auth","sign_up","transactions","methods","post","get","patch","delete","put","nodeEnvs","ci","dev","prod","URLs","api_dev","prefix","process","request","endpoint","method","authenticated","a","json","headers","ky","then","response","signUp","getUserData","postTransaction","createContext","KEYS","userReducer","state","action","newState","type","console","error","cloneDeep","capitalizeEachWord","join","setItem","value","Provider","useReducer","dispatch","fetchUser","useCallback","catch","err","keys","length","transact","createUser","newData","signin","clear","window","href","numberFormatter","Intl","NumberFormat","currency","style","dateFormatter","DateTimeFormat","year","month","day","hour","minute","second","formatCurrency","number","float","parseFloat","format","formatDate","date","validNumber","str","startCase","toLower"],"mappings":"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","file":"static/js/main.4871b066.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/BankLogo.c839211a.png\";","import React, { useContext, useEffect, useState } from 'react';\nimport {\n  Navbar,\n  Container,\n  Nav,\n  OverlayTrigger,\n  Popover,\n} from 'react-bootstrap';\nimport isEqual from 'lodash/isEqual';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { UserContext } from '../services/UserContext';\nimport { sessionStorageKeys, routes as routeConstants } from '../constants';\n\nconst Header = ({ location }) => {\n  const { user, userExists } = useContext(UserContext);\n  const [routes, setRoutes] = useState([]);\n\n  useEffect(() => {\n    if (userExists() || sessionStorage.getItem(sessionStorageKeys.token)) {\n      setRoutes([\n        routeConstants.home,\n        routeConstants.withdraw,\n        routeConstants.deposit,\n        routeConstants.data,\n        routeConstants.logout,\n      ]);\n      return;\n    }\n    setRoutes([\n      routeConstants.home,\n      routeConstants.login,\n      routeConstants.create_account,\n    ]);\n  }, [userExists, user]);\n\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Container>\n        <Navbar.Brand to={routeConstants.home.path} as={Link}>\n          Bad Bank\n        </Navbar.Brand>\n        <Navbar.Toggle />\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Nav>\n            {routes.map((route) => (\n              <OverlayTrigger\n                trigger={['hover', 'focus']}\n                placement=\"bottom\"\n                key={`pop-header-${route.name}}`}\n                overlay={\n                  <Popover>\n                    <Popover.Header>{route.name}</Popover.Header>\n                    <Popover.Body>{route.description}</Popover.Body>\n                  </Popover>\n                }\n              >\n                <Nav.Link\n                  className={`nav-link ${\n                    isEqual(route.path, location.pathname) && `text-primary`\n                  } ${\n                    isEqual(route, routeConstants.create_account) &&\n                    'bg-primary rounded text-light mr-4'\n                  } ${\n                    (isEqual(route, routeConstants.login) ||\n                      isEqual(route, routeConstants.logout)) &&\n                    'bg-dark text-light bold rounded mx-2'\n                  }`}\n                  to={route.path}\n                  as={Link}\n                  key={`header-link-${route.name}`}\n                >\n                  {route.name}\n                </Nav.Link>\n              </OverlayTrigger>\n            ))}\n            {userExists() ? (\n              <Nav.Link disabled className=\"text-secondary\">\n                {`${user.first_name} ${user.last_name} (${user.email})`}\n              </Nav.Link>\n            ) : null}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\nexport default withRouter(Header);\n","import { Navbar, NavbarBrand, Container } from 'react-bootstrap';\nconst Footer = () => {\n  return (\n    <div className=\"fixed-bottom bg-light\">\n      <Navbar>\n        <Container>\n          <NavbarBrand>Bad Bank™</NavbarBrand>\n        </Container>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Footer;\n","import Header from './components/Header';\nimport Footer from './components/Footer';\nimport React, { useContext } from 'react';\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\nimport { routes } from './constants';\nimport { UserContext } from './services/UserContext';\nimport isEqual from 'lodash/isEqual';\nimport Logo from './images/BankLogo.png';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './Routes.css';\nimport { Redirect } from 'react-router-dom';\n\nconst FourZeroFour = React.lazy(() => import('./pages/404'));\n\nconst LoadingComponent = () => (\n  <div className=\"w-100 h-100 bg-light text-dark\">\n    <img src={Logo} alt=\"Logo\" height=\"256px\" />\n    <h1 className=\"p-5\">Loading...</h1>\n  </div>\n);\n\nconst Routes = () => {\n  const { userExists } = useContext(UserContext);\n  const RenderSuspenseful = ({ children }) => (\n    <React.Suspense fallback={<LoadingComponent />}>{children}</React.Suspense>\n  );\n\n  return (\n    <div className=\"App\">\n      <Router basename=\"/\">\n        <Header />\n        <Switch>\n          {Object.values(routes).map((route) => (\n            <Route key={`route-${route.name}`} path={route.path} exact>\n              {!route.walled ||\n              (userExists() &&\n                !isEqual(route, routes.create_account) &&\n                !isEqual(route, routes.login)) ? (\n                <RenderSuspenseful>{route.component}</RenderSuspenseful>\n              ) : (\n                <Redirect to={userExists() ? '/data' : '/login'} />\n              )}\n            </Route>\n          ))}\n\n          <Route>\n            <RenderSuspenseful>\n              <FourZeroFour />\n            </RenderSuspenseful>\n          </Route>\n        </Switch>\n        <Footer />\n      </Router>\n    </div>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport Routes from './Routes';\nimport { Provider } from './services/UserContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider>\n      <Routes />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import React from 'react';\nconst HomePage = React.lazy(() => import('./pages/HomePage'));\nconst Withdraw = React.lazy(() => import('./pages/Withdraw'));\nconst CreateAccount = React.lazy(() => import('./pages/CreateAccount'));\nconst Deposit = React.lazy(() => import('./pages/Deposit'));\nconst AllData = React.lazy(() => import('./pages/AllData'));\nconst Login = React.lazy(() => import('./pages/Login'));\nconst Logout = React.lazy(() => import('./pages/Logout'));\n\nexport const routes = {\n  home: {\n    name: 'Home',\n    path: '/',\n    description: `Our homepage`,\n    component: <HomePage />,\n    walled: false,\n  },\n  withdraw: {\n    name: 'Withdraw',\n    path: '/withdraw',\n    description: `Make a withdrawal`,\n    component: <Withdraw />,\n    walled: true,\n  },\n  deposit: {\n    name: 'Deposit',\n    path: '/deposit',\n    description: `Make a deposit`,\n    component: <Deposit />,\n    walled: true,\n  },\n  data: {\n    name: 'My Data',\n    path: '/data',\n    description: `View all of your data`,\n    component: <AllData />,\n    walled: true,\n  },\n  create_account: {\n    name: 'Create Account',\n    path: '/create-account',\n    description: `Create an account`,\n    component: <CreateAccount />,\n    walled: false,\n  },\n  login: {\n    name: 'Login',\n    path: '/login',\n    description: 'Log into the bank',\n    component: <Login />,\n    walled: false,\n  },\n  logout: {\n    name: 'Logout',\n    path: '/logout',\n    description: 'Log out of the bank',\n    component: <Logout />,\n    walled: true,\n  },\n};\n\nexport const endpoints = {\n  auth: {\n    sign_up: '/auth/signup',\n    login: '/auth/login',\n    logout: '/auth/logout',\n  },\n  user: '/me',\n  transactions: '/transactions',\n};\n\nexport const methods = {\n  post: 'post',\n  get: 'get',\n  patch: 'patch',\n  delete: 'delete',\n  put: 'put',\n};\n\nexport const nodeEnvs = {\n  ci: 'ci',\n  dev: 'development',\n  prod: 'production',\n};\n\nexport const URLs = {\n  api_dev: 'http://localhost:3000',\n};\n\nexport const sessionStorageKeys = {\n  token: 'token',\n};\n","import ky from 'ky';\nimport {\n  endpoints,\n  nodeEnvs,\n  URLs,\n  methods,\n  sessionStorageKeys,\n} from '../constants';\n\n// If it's the development environment then use a different API URL\nconst prefix = process.env.NODE_ENV === nodeEnvs.dev ? URLs.api_dev : '';\n\nconst request =\n  (endpoint, method, authenticated = false) =>\n  async (data) => {\n    const request = {};\n    if (data) {\n      request.json = { ...data };\n    }\n    if (authenticated) {\n      const token = sessionStorage.getItem(sessionStorageKeys.token);\n      if (token) {\n        request.headers = { token };\n      }\n    }\n    return ky[method](prefix + endpoint, request).then((response) =>\n      response.json()\n    );\n  };\n\nexport const signUp = request(endpoints.auth.sign_up, methods.post);\n\nexport const login = request(endpoints.auth.login, methods.post);\n\nexport const logout = request(endpoints.auth.logout, methods.post, true);\n\nexport const getUserData = request(endpoints.user, methods.get, true);\n\nexport const updateUserData = request(endpoints.user, methods.patch, true);\n\nexport const getTransactions = request(\n  endpoints.transactions,\n  methods.get,\n  true\n);\n\nexport const postTransaction = request(\n  endpoints.transactions,\n  methods.patch,\n  true\n);\n","import { createContext, useReducer, useEffect, useCallback } from 'react';\nimport { routes, sessionStorageKeys } from '../constants';\nimport { getUserData, login, postTransaction, signUp } from './Requests';\nimport { capitalizeEachWord } from './Utilities';\nimport cloneDeep from 'lodash/cloneDeep';\n\nconst UserContext = createContext();\n\nconst KEYS = {\n  LOAD_USER: 'LOAD_USER',\n  TRANSACTION: 'TRANSACTION',\n};\n\nconst userReducer = (state, action) => {\n  let newState = state;\n  switch (action.type) {\n    case KEYS.LOAD_USER: {\n      // These braces are odd, for some reason eslint doesn't determine scope properly without them. https://stackoverflow.com/questions/33397782/const-already-declared-in-es6-switch-block\n      if (!action.user) {\n        console.error('Cannot add a user without a user to add');\n        break;\n      }\n      const user = cloneDeep(action.user);\n      user.name = capitalizeEachWord(\n        [action.first_name, action.last_name].join(' ')\n      );\n      if (user.token) {\n        sessionStorage.setItem(sessionStorageKeys.token, user.token);\n      }\n      newState = { ...state, ...user };\n      break;\n    }\n    case KEYS.TRANSACTION: {\n      newState = { ...state, transactions: action.value };\n\n      break;\n    }\n    default:\n      console.error('userReducer called without an action type');\n      break;\n  }\n  return newState;\n};\n\nconst Provider = ({ children }) => {\n  const [user, dispatch] = useReducer(userReducer, {});\n\n  const fetchUser = useCallback(\n    () =>\n      getUserData()\n        .then((user) => dispatch({ type: KEYS.LOAD_USER, user }))\n        .catch((err) => console.error('Failed to fetch user data', err)),\n    []\n  );\n\n  useEffect(fetchUser, [fetchUser]);\n\n  const transact = (value) =>\n    postTransaction({\n      value,\n    }).then((transactions) => {\n      dispatch({ type: KEYS.TRANSACTION, value: transactions });\n      fetchUser();\n    });\n\n  const createUser = (user) =>\n    signUp(user).then((newData) =>\n      dispatch({ type: KEYS.LOAD_USER, user: newData })\n    );\n\n  const signin = (user) =>\n    login(user).then((newData) =>\n      dispatch({ type: KEYS.LOAD_USER, user: newData })\n    );\n\n  const logout = () => {\n    sessionStorage.clear();\n    window.location.href = routes.login.path;\n  };\n\n  const userExists = () =>\n    !!Object.keys(user).length ||\n    sessionStorage.getItem(sessionStorageKeys.token);\n\n  return (\n    <UserContext.Provider\n      value={{\n        user,\n        userExists,\n        transact,\n        createUser,\n        signin,\n        fetchUser,\n        logout,\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport { Provider, UserContext };\n","import toLower from 'lodash/toLower';\nimport startCase from 'lodash/startCase';\n\nconst numberFormatter = new Intl.NumberFormat('en-US', {\n  currency: 'USD',\n  style: 'currency',\n});\n\nconst dateFormatter = new Intl.DateTimeFormat('default', {\n  year: 'numeric',\n  month: 'numeric',\n  day: 'numeric',\n  hour: 'numeric',\n  minute: 'numeric',\n  second: 'numeric',\n});\n\n/**\n * Provides an interface to convert balances into formatted currency strings for display\n * @param {Number} number The number to be formatted\n * @returns {String} A formatted currency string\n */\nconst formatCurrency = (number) => {\n  const float = parseFloat(number);\n  return numberFormatter.format(float);\n};\n\n/**\n * Formats the provided Date into a string\n * @param {Date} date The date to be formatted\n * @returns {String} A formatter datetime string\n */\nconst formatDate = (date) => {\n  return dateFormatter.format(date);\n};\n\n/**\n * Determines whether or not a number exists (0 is truthy, null isn't)\n * @param {Number} number The number that will be checked for a non existent value\n * @returns {Boolean} True or false depending if the number exists or not\n */\nconst validNumber = (number) => number || number === 0;\n\n/**\n * Capitalize each word in a string\n * @param {String} str The string containing separate words that need to be capitalized\n * @returns {String} The input string where each word is lowercased except for the first character, which is uppercased\n */\nconst capitalizeEachWord = (str) => startCase(toLower(str));\n\nexport { formatCurrency, validNumber, formatDate, capitalizeEachWord };\n"],"sourceRoot":""}