{"ast":null,"code":"var _jsxFileName = \"/Users/thegraham/Documents/xPro-Portfolio/wk15-Challenge/reacall/src/components/Dropdown.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dropdown = ({\n  disabled,\n  stage,\n  onSelect,\n  onClick\n}) => {\n  _s();\n\n  const [inputValue, setInputValue] = useState('');\n  const [open, setOpen] = useState(false);\n  const [dataset, setDataset] = useState({\n    visible: [],\n    all: []\n  });\n  useEffect(() => {\n    console.log(stage);\n    if (!stage.dataset) return;\n    setDataset({\n      all: stage.dataset,\n      visible: stage.dataset\n    });\n  }, [stage.dataset]);\n\n  const onChange = e => {\n    setInputValue(e.target.value || '');\n\n    if (!e.target.value) {\n      setOpen(false);\n      return;\n    }\n\n    setDataset(set => ({ ...set,\n      visible: set.all.filter(data => data.includes(e.target.value))\n    }));\n    setOpen(true);\n  };\n\n  const checkEnter = e => {\n    if (e.key === 'Enter') {\n      if (dataset.all.includes(e.target.value)) {\n        onSelect(e.target.value);\n        setOpen(false);\n        e.target.blur();\n      }\n    }\n  };\n\n  const dropdownSelection = value => {\n    setOpen(false);\n    setInputValue(value);\n    onSelect(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onClick: onClick,\n      className: disabled && 'disabled',\n      placeholder: `Enter a ${stage.name}...`,\n      onChange: onChange,\n      onKeyDown: checkEnter,\n      value: inputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dropdown-values ${open ? 'show' : ''}`,\n      children: dataset.visible.map(year => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => dropdownSelection(year),\n        children: year\n      }, `y-${year}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dropdown, \"DkMh0aS1md6eRPlmdagRIba+Uko=\");\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["/Users/thegraham/Documents/xPro-Portfolio/wk15-Challenge/reacall/src/components/Dropdown.jsx"],"names":["React","useEffect","useState","Dropdown","disabled","stage","onSelect","onClick","inputValue","setInputValue","open","setOpen","dataset","setDataset","visible","all","console","log","onChange","e","target","value","set","filter","data","includes","checkEnter","key","blur","dropdownSelection","name","map","year"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst Dropdown = ({ disabled, stage, onSelect, onClick }) => {\n    const [inputValue, setInputValue] = useState('');\n    const [open, setOpen] = useState(false);\n    const [dataset, setDataset] = useState({\n        visible: [],\n        all: [],\n    });\n\n    useEffect(() => {\n        console.log(stage);\n        if (!stage.dataset) return;\n        setDataset({\n            all: stage.dataset,\n            visible: stage.dataset,\n        });\n    }, [stage.dataset]);\n\n    const onChange = (e) => {\n        setInputValue(e.target.value || '');\n        if (!e.target.value) {\n            setOpen(false);\n            return;\n        }\n        setDataset((set) => ({\n            ...set,\n            visible: set.all.filter((data) => data.includes(e.target.value)),\n        }));\n        setOpen(true);\n    };\n\n    const checkEnter = (e) => {\n        if (e.key === 'Enter') {\n            if (dataset.all.includes(e.target.value)) {\n                onSelect(e.target.value);\n                setOpen(false);\n                e.target.blur();\n            }\n        }\n    };\n\n    const dropdownSelection = (value) => {\n        setOpen(false);\n        setInputValue(value);\n        onSelect(value);\n    };\n\n    return (\n        <div>\n            <input\n                type=\"text\"\n                onClick={onClick}\n                className={disabled && 'disabled'}\n                placeholder={`Enter a ${stage.name}...`}\n                onChange={onChange}\n                onKeyDown={checkEnter}\n                value={inputValue}\n            />\n            <div className={`dropdown-values ${open ? 'show' : ''}`}>\n                {dataset.visible.map((year) => (\n                    <div\n                        onClick={() => dropdownSelection(year)}\n                        key={`y-${year}`}\n                    >\n                        {year}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Dropdown;\n"]},"metadata":{},"sourceType":"module"}