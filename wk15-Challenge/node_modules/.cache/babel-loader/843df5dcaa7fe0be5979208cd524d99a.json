{"ast":null,"code":"var _jsxFileName = \"/Users/thegraham/Documents/xPro-Portfolio/wk15-Challenge/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport RecallList from './components/RecallList';\nimport Dropdown from './components/Dropdown';\nimport { STAGES } from './helpers/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [data, setData] = useState({ ...STAGES\n  });\n  const [currentStage, setCurrentStage] = useState(STAGES.year);\n  const [init, setInit] = useState(false);\n  const [inputStates, setInputStates] = useState({\n    year: false,\n    make: true,\n    model: true\n  });\n  useEffect(() => {\n    console.log(data);\n\n    if (currentStage.name === STAGES.year.name && (!data.year || !data.year.dataset) && !init) {\n      const getData = async () => {\n        const res = await currentStage.getDataset();\n        setData(d => ({ ...d,\n          [currentStage.name]: { ...currentStage,\n            dataset: res\n          }\n        }));\n      };\n\n      setInit(true);\n      getData();\n    }\n  }, [currentStage, data.year, data, init]);\n  useEffect(() => setCurrentStage(data[currentStage.name]), [data, currentStage.name]);\n\n  const enableIfDisabled = e => {\n    if ([...e.target.classList].includes('disabled')) {\n      setInputStates(current => ({ ...current,\n        year: false\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Vehicle Recall Finder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      stage: STAGES.year\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      stage: STAGES.make\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      stage: STAGES.model\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RecallList, {\n      make: 'tesla',\n      model: 'model y',\n      year: 2020\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"dywQFKModyc9/VmLbhWZPaVGEmk=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/thegraham/Documents/xPro-Portfolio/wk15-Challenge/src/App.jsx"],"names":["React","useState","useEffect","RecallList","Dropdown","STAGES","Main","data","setData","currentStage","setCurrentStage","year","init","setInit","inputStates","setInputStates","make","model","console","log","name","dataset","getData","res","getDataset","d","enableIfDisabled","e","target","classList","includes","current"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport RecallList from './components/RecallList';\nimport Dropdown from './components/Dropdown';\nimport { STAGES } from './helpers/constants';\n\nconst Main = () => {\n    const [data, setData] = useState({ ...STAGES });\n    const [currentStage, setCurrentStage] = useState(STAGES.year);\n    const [init, setInit] = useState(false);\n    const [inputStates, setInputStates] = useState({\n        year: false,\n        make: true,\n        model: true,\n    });\n\n    useEffect(() => {\n        console.log(data);\n        if (\n            currentStage.name === STAGES.year.name &&\n            (!data.year || !data.year.dataset) &&\n            !init\n        ) {\n            const getData = async () => {\n                const res = await currentStage.getDataset();\n                setData((d) => ({\n                    ...d,\n                    [currentStage.name]: {\n                        ...currentStage,\n                        dataset: res,\n                    },\n                }));\n            };\n            setInit(true);\n            getData();\n        }\n    }, [currentStage, data.year, data, init]);\n\n    useEffect(\n        () => setCurrentStage(data[currentStage.name]),\n        [data, currentStage.name]\n    );\n\n    const enableIfDisabled = (e) => {\n        if ([...e.target.classList].includes('disabled')) {\n            setInputStates((current) => ({ ...current, year: false }));\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Vehicle Recall Finder</h1>\n            <Dropdown stage={STAGES.year} />\n            <Dropdown stage={STAGES.make} />\n            <Dropdown stage={STAGES.model} />\n            <RecallList make={'tesla'} model={'model y'} year={2020} />\n        </div>\n    );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}